/*

Covid 19 Data Exploration 
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/

SELECT * FROM CovidDeaths

ORDER BY 3, 4;



-- Select Data that we are going to be starting with



SELECT Location, date, total_cases, new_cases, total_deaths, population

FROM CovidDeaths

ORDER BY 1, 2; 


-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country

SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage

FROM CovidDeaths; 



-- Looking specifically at Portugal (my home country)



SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage

FROM CovidDeaths 

WHERE location like 'Portugal'

order by 1, 2;



-- Looking specifically at England

SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage

FROM CovidDeaths 

WHERE location like 'England'

order by 1, 2;


-- Seems like there is no data for England's cases or deaths, however, I've noticed there is data for the United Kingdom.


SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS DeathPercentage

FROM CovidDeaths 

WHERE location like 'United Kingdom'

order by 1, 2;



-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

SELECT Location, date, population, total_cases, (total_cases/population)*100 AS CovidPercentage

FROM CovidDeaths 

WHERE location like 'United Kingdom'

order by 1, 2;



-- Countries with Highest Infection Rate compared to Population

SELECT Location, population, MAX(total_cases) AS HighestInfectionCount, MAX(total_cases/population)*100 AS MaximumPopulationInfected

FROM CovidDeaths 

WHERE population&gt;10000000

GROUP BY 1, 2

order by 4 DESC;



-- Countries with Highest Death Count per Population

SELECT location, MAX(total_deaths) AS TotalDeathCount

FROM CovidDeaths

WHERE continent is not null

GROUP BY location

ORDER BY 2 DESC;



-- BREAKING THINGS DOWN BY CONTINENT


-- Showing contintents with the highest death count per population

SELECT location, MAX(total_deaths) AS TotalDeathCount

FROM CovidDeaths

WHERE continent is null

GROUP BY location

ORDER BY 2 DESC;



-- Showing the continents with the highest infection count

SELECT continent, location, MAX(total_cases) AS TotalCaseCount

FROM CovidDeaths

WHERE continent is null

GROUP BY location

ORDER BY 2 DESC;



-- Global Numbers



SELECT SUM(NEW_cases) AS DailyNewCases, SUM(new_deaths) AS DailyDeaths, SUM(cast(new_deaths as real))/SUM(cast(new_cases as REAL)) * 100  AS GlobalDailyDeathPercentage

FROM CovidDeaths 

WHERE continent is null

GROUP BY date

order by 1, 2;



-- Now moving onto the CovidVaccinations table

SELECT * FROM CovidVaccinations

ORDER BY 3, 4;


-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine
-- Using CTE to perform Calculation on Partition By

WITH PopVac AS(

	SELECT dea.continent, dea.location, dea.population, vac.new_vaccinations,

	SUM(cast(vac.new_vaccinations as real)) OVER (Partition by dea.location ORDER BY 

	dea.location, dea.date) AS RollingVaccinations

	FROM CovidDeaths AS dea Join CovidVaccinations AS vac

	ON dea.location = vac.location AND dea.date = vac.date

	WHERE dea.continent is not null AND dea.location = 'United Kingdom'

	ORDER BY 2

)

SELECT *, ((cast (PopVac.RollingVaccinations as real))/(PopVac.population)) * 100 AS PercentVaccinated

FROM PopVac

WHERE PopVac.continent is not null

ORDER BY PercentVaccinated DESC

-- This results in a maximum percentage of 220% due to the existance of the 2nd and 3rd vaccine dose.



- Creating View to store data for later visualizations

CREATE VIEW PercentPopulationVaccinated 

AS

SELECT dea.continent, dea.location, dea.population, vac.new_vaccinations,

	SUM(cast(vac.new_vaccinations as real)) OVER (Partition by dea.location ORDER BY 

	dea.location, dea.date) AS RollingVaccinations

FROM CovidDeaths AS dea 

Join CovidVaccinations AS vac

	ON dea.location = vac.location AND dea.date = vac.date

	WHERE dea.continent is not null AND dea.location = 'United Kingdom'

	ORDER BY 2;

	

SELECT * FROM PercentPopulationVaccinated;</sql><current_tab id="0"/></tab_sql></sqlb_project>
